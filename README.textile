h1. Travis CI API Wrapper

h2. Usage

bc[ruby]. #Repositories
Travis::API:Client::Repositories.all #Collection of Repository instances
Travis::API:Client::Repositories.all! #Collection of Repository instances bypassing cache
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').fetch #Repository
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').fetch! #Repository bypassing cache
Travis::API:Client::Repositories.slug('owner_name_here/name_here').fetch #Repository
Travis::API:Client::Repositories.slug('owner_name_here/name_here').fetch! #Repository bypassing cache
#Builds
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').builds #Collection of Build instances 
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').builds! #Collection of Build instances bypassing cache
Travis::API:Client::Repositories.slug('owner_name_here/name_here').builds #Collection of Build instances
Travis::API:Client::Repositories.slug('owner_name_here/name_here').builds! #Collection of Build instances bypassing cache
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').build('id_here') #Build
Travis::API:Client::Repositories.owner('owner_name_here').name('name_here').build!('id_here') #Build bypassing cache
Travis::API:Client::Repositories.slug('owner_name_here/name_here').build('id_here') #Build
Travis::API:Client::Repositories.slug('owner_name_here/name_here').build!('id_here') #Build bypassing cache

h3. Repository methods

The main attributes from the API will be accessible via the following methods:

bc[ruby]. [:slug, :id, :status, :last_build_id, :last_build_status, :last_build_number, :last_build_finished_at]

Some relationships can be retrieved using the following methods:

bc[ruby]. repository.builds #=> Collection of Build instances
repository.last_build #=> Build

You can also update the repository information from the API usign:

bc[ruby]. repository.reload! #=> Fetch the updated repository data from the API and updates its attributes and relationships

h3. Build methods

The main attributes from the API will be accessible via the following methods:

bc[ruby]. [:number, :commited_at, :commit, :finished_at, :config, :author_name, :log, :branch, :id, :parent_id, :started_at, :author_email, :status, :repository_id, :message, :compare_url]

Some relationships can be retrieved using the following methods:

bc[ruby]. build.parent #=> Build or nil
build.repository #=> Repository
build.matrix #=> Collection of Build instances or nil
    
You can also update the build information from the API usign:

bc[ruby]. build.reload! #=> Fetch the updated build data from the API and updates its attributes and relationships

